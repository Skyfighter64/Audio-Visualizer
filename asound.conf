
# Overview:

#                               --> loopin   [--> loopout]
#                             /
#   pcm.pbnrec -->   pcm.multi
#                             \ 
#                               --> _usbSound --> card "Device"  
#
#
#
#   pcm.default       ------->      _usbSound --> card "Device"
#
#
#


# set the default audio device to the USB SoundCard ("Device")
pcm.!default 
{   
    type plug;
    slave.pcm _usbSound; # usb soundcard as default output
    #slave.pcm pbnrec;	# pbnrec as default output
}

# define usb sound card
# use this instead of _usbSound to play directly to the usb Soundcard from a program
pcm.usbSound 
{
    type plug;
    slave.pcm _usbSound; # redirect to actual usb device
    #nonblock true;
}
ctl.usbSound
{
    type plug;
    slave.pcm plughw:Device;
}

# redirect to usb soundcard (without additional plug)
# this is needed for the pbnrec plug which conflicts if two plugs (pbnrec, usbSound) are used in the same stream
pcm._usbSound
{
    type empty;
    slave.pcm plughw:Device;
}

#
# loopback devices
# playback device (play onto this device)
pcm.loopin {
    type plug
    slave.pcm "hw:Loopback,0,0"
}

# recording device (record from this device)
pcm.loopout {
    type plug
    slave.pcm "hw:Loopback,1,0"
}

# split the incoming stream into usb and loopback 
pcm.multi {
    type route;
    slave.pcm {
        type multi;
        #specify devices to route to
        slaves.a.pcm _usbSound;    # usb sound card
        slaves.b.pcm "loopin";      # loopback in device
        slaves.a.channels 2;    # specify nr of channels routed
        slaves.b.channels 2;

        bindings.0.slave a;     # specify which channel is routed to which devices (volume?)
        bindings.0.channel 0;   # here: both channels to both devices
        bindings.1.slave a;
        bindings.1.channel 1;

        bindings.2.slave b;
        bindings.2.channel 0;
        bindings.3.slave b;
        bindings.3.channel 1;
    }
    # transfer table (for routing)
    ttable.0.0 1;
    ttable.1.1 1;
    ttable.0.2 1;
    ttable.1.3 1;
}

# playback and record device
pcm.pbnrec {
    type plug;
    slave.pcm "multi"
    hint{
        show on
        description "Alsa Playback & Record"}
        }
